{"version":3,"file":"695.js","mappings":"ypCAoEA,UA5Dc,WACZ,OAA0CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAQ,EAAdC,KAAgBC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACoB,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CC,EAAU,KAAEC,EAAa,KACW,KAAZC,EAAAA,EAAAA,GAAS,IAAG,GAApCC,EAAK,KAAEC,EAAa,KACsB,KAAZF,EAAAA,EAAAA,GAAS,IAAG,GAA1CG,EAAQ,KAAEC,EAAgB,KAC3BC,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFT,GAAc,GACdU,IAAAA,KAEI,mBACA,CAAER,MAAAA,EAAOE,SAAAA,GACT,CACEO,iBAAiB,IAGpBC,MAAK,WACJf,GACF,IACCgB,OAAM,SAACjB,GAAU,QAChBI,EAA6C,OAAjB,QAAd,EAAAJ,EAAMkB,gBAAQ,OAAM,QAAN,EAAd,EAAgBnB,YAAI,WAAN,EAAd,EAAsBoB,MACtC,GACJ,GACA,CAACb,EAAOE,EAAUP,IAIpB,OADAmB,QAAQC,IAAIrB,EAAOF,IACdE,GAASF,GACZsB,QAAQC,IAAI,OAAQvB,GACb,gBAAC,KAAQ,CAACwB,GAAG,oCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAM,cACP,gBAAC,KAAI,CAACb,SAAUA,GACd,gBAAC,KAAK,CAACa,GAAG,eACR,sCACA,2BACE,gBAAC,KAAK,CAACC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOpB,EAAOqB,SAAUpB,MAGxE,gBAAC,KAAK,CAACgB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAK,CAACC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOlB,EAAUmB,SAAUlB,KAEjFN,GAAc,gBAAC,KAAK,kCAEvB,gBAAC,KAAM,CAACqB,KAAK,UAAQ,QAEvB,gBAAC,KAAa,sBAEZ,qBAAGI,KAAK,WAAS,cAIzB,C","sources":["webpack://slack-clone-front/./pages/LogIn/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst LogIn = () => {\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          '/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then(() => {\n          mutate();\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.code === 401);\n        });\n    },\n    [email, password, mutate],\n  );\n\n  console.log(error, userData);\n  if (!error && userData) {\n    console.log('로그인됨', userData);\n    return <Redirect to=\"/workspace/slack/channel/slack\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Slack</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <a href=\"/signup\">회원가입 하러가기</a>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n"],"names":["useSWR","fetcher","userData","data","error","mutate","useState","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","catch","response","code","console","log","to","id","type","name","value","onChange","href"],"sourceRoot":""}