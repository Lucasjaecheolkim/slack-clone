{"version":3,"file":"838.js","mappings":"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","sources":["webpack://slack-clone-front/./components/DMList/styles.tsx","webpack://slack-clone-front/./components/EachChannel/index.tsx","webpack://slack-clone-front/./components/ChannelList/index.tsx","webpack://slack-clone-front/./components/Modal/styles.tsx","webpack://slack-clone-front/./components/Modal/index.tsx","webpack://slack-clone-front/./components/CreateChannelModal/index.tsx","webpack://slack-clone-front/./components/EachDM/index.tsx","webpack://slack-clone-front/./hooks/useSocket.ts","webpack://slack-clone-front/./components/DMList/index.tsx","webpack://slack-clone-front/./components/InviteWorkspaceModal/index.tsx","webpack://slack-clone-front/./components/Menu/styles.tsx","webpack://slack-clone-front/./components/Menu/index.tsx","webpack://slack-clone-front/./components/ChatBox/styles.tsx","webpack://slack-clone-front/./components/ChatBox/index.tsx","webpack://slack-clone-front/./components/Chat/styles.tsx","webpack://slack-clone-front/./components/Chat/index.tsx","webpack://slack-clone-front/./components/ChatList/styles.tsx","webpack://slack-clone-front/./components/ChatList/index.tsx","webpack://slack-clone-front/./components/InviteChannelModal/index.tsx","webpack://slack-clone-front/./pages/Channel/styles.tsx","webpack://slack-clone-front/./utils/makeSection.ts","webpack://slack-clone-front/./pages/Channel/index.tsx","webpack://slack-clone-front/./pages/DirectMessage/styles.tsx","webpack://slack-clone-front/./pages/DirectMessage/index.tsx","webpack://slack-clone-front/./layouts/Workspace/styles.tsx","webpack://slack-clone-front/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  channel: IChannel;\n}\nconst EachChannel: VFC<Props> = ({ channel }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, channel]);\n\n  return (\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\n    </NavLink>\n  );\n};\n\nexport default EachChannel;\n","import { CollapseButton } from '@components/DMList/styles';\nimport EachChannel from '@components/EachChannel';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\n\ninterface Props {\n  channelData?: IChannel[];\n  userData?: IUser;\n}\n\nconst ChannelList: FC<Props> = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return <EachChannel key={channel.id} channel={channel} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\nconst CreateChannelModal: FC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const params = useParams<{ workspace?: string }>();\n  const { workspace } = params;\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher);\n  const { mutate: revalidateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newChannel || !newChannel.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels`, {\n          name: newChannel,\n        })\n        .then(() => {\n          revalidateChannel();\n          setShowCreateChannelModal(false);\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel, revalidateChannel, setNewChannel, setShowCreateChannelModal, workspace],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널 이름</span>\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button>생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  member: IUser;\n  isOnline: boolean;\n}\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, member]);\n\n  return (\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n      <i\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n        }`}\n        aria-hidden=\"true\"\n        data-qa=\"presence_indicator\"\n        data-qa-presence-self=\"false\"\n        data-qa-presence-active=\"false\"\n        data-qa-presence-dnd=\"false\"\n      />\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\n      {member.id === userData?.id && <span> (나)</span>}\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\n    </NavLink>\n  );\n};\n\nexport default EachDM;\n","import { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nconst backUrl = process.env.NODE_ENV === 'production' ? 'https://sleact.nodebird.com' : 'http://localhost:7095';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace && sockets[workspace]) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n    console.info('create socket', workspace, sockets[workspace]);\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","import EachDM from '@components/EachDM';\nimport useSocket from '@hooks/useSocket';\nimport { CollapseButton } from '@components/DMList/styles';\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateMenu, CloseModalButton } from '@components/Menu/styles';\nimport React, { CSSProperties, FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\n\nconst Menu: FC<PropsWithChildren<Props>> = ({ closeButton, style, show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div onClick={stopPropagation} style={style}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\nimport { MentionsInput } from 'react-mentions';\n\nexport const ChatArea = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  padding-top: 0;\n`;\n\nexport const Form = styled.form`\n  color: rgb(29, 28, 29);\n  font-size: 15px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgb(29, 28, 29);\n`;\n\nexport const MentionsTextarea = styled(MentionsInput)`\n  font-family: Slack-Lato, appleLogo, sans-serif;\n  font-size: 15px;\n  padding: 8px 9px;\n\n  & strong {\n    background: skyblue;\n  }\n\n  & textarea {\n    height: 44px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-radius: 4px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n  }\n\n  & ul {\n    border: 1px solid lightgray;\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 9px 10px;\n    background: white;\n    border-radius: 4px;\n    width: 150px;\n  }\n`;\n\nexport const Toolbox = styled.div`\n  position: relative;\n  background: rgb(248, 248, 248);\n  height: 41px;\n  display: flex;\n  border-top: 1px solid rgb(221, 221, 221);\n  align-items: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nexport const SendButton = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const EachMention = styled.button<{ focus: boolean }>`\n  padding: 4px 20px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: rgb(28, 29, 28);\n  width: 100%;\n\n  & img {\n    margin-right: 5px;\n  }\n\n  ${({ focus }) =>\n    focus &&\n    `\n    background: #1264a3;\n    color: white;\n  `};\n`;\n","import { ChatArea, Form, MentionsTextarea, SendButton, Toolbox, EachMention } from '@components/ChatBox/styles';\nimport { IUser } from '@typings/db';\nimport autosize from 'autosize';\nimport gravatar from 'gravatar';\nimport React, { FC, useCallback, useEffect, useRef } from 'react';\nimport { Mention, SuggestionDataItem } from 'react-mentions';\n\ninterface Props {\n  onSubmitForm: (e: any) => void;\n  chat?: string;\n  onChangeChat: (e: any) => void;\n  placeholder: string;\n  data?: IUser[];\n}\nconst ChatBox: FC<Props> = ({ onSubmitForm, chat, onChangeChat, placeholder, data }) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (textareaRef.current) {\n      autosize(textareaRef.current);\n    }\n  }, []);\n\n  const onKeydownChat = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderUserSuggestion: (\n    suggestion: SuggestionDataItem,\n    search: string,\n    highlightedDisplay: React.ReactNode,\n    index: number,\n    focused: boolean,\n  ) => React.ReactNode = useCallback(\n    (member, search, highlightedDisplay, index, focus) => {\n      if (!data) {\n        return null;\n      }\n      return (\n        <EachMention focus={focus}>\n          <img src={gravatar.url(data[index].email, { s: '20px', d: 'retro' })} alt={data[index].nickname} />\n          <span>{highlightedDisplay}</span>\n        </EachMention>\n      );\n    },\n    [data],\n  );\n\n  return (\n    <ChatArea>\n      <Form onSubmit={onSubmitForm}>\n        <MentionsTextarea\n          id=\"editor-chat\"\n          value={chat}\n          onChange={onChangeChat}\n          onKeyPress={onKeydownChat}\n          placeholder={placeholder}\n          inputRef={textareaRef}\n          allowSuggestionsAboveCursor\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger=\"@\"\n            data={data?.map((v) => ({ id: v.id, display: v.nickname })) || []}\n            renderSuggestion={renderUserSuggestion}\n          />\n        </MentionsTextarea>\n        <Toolbox>\n          <SendButton\n            className={\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\n            }\n            data-qa=\"texty_send_button\"\n            aria-label=\"Send message\"\n            data-sk=\"tooltip_parent\"\n            type=\"submit\"\n            disabled={!chat?.trim()}\n          >\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\n          </SendButton>\n        </Toolbox>\n      </Form>\n    </ChatArea>\n  );\n};\n\nexport default ChatBox;\n","import styled from '@emotion/styled';\n\nexport const ChatWrapper = styled.div`\n  display: flex;\n  padding: 8px 20px;\n\n  &:hover {\n    background: #eee;\n  }\n\n  & .chat-img {\n    display: flex;\n    width: 36px;\n    margin-right: 8px;\n\n    & img {\n      width: 36px;\n      height: 36px;\n    }\n  }\n\n  & .chat-text {\n    display: flex;\n    flex-wrap: wrap;\n    flex: 1;\n\n    & p {\n      flex: 0 0 100%;\n      margin: 0;\n    }\n  }\n\n  & .chat-user {\n    display: flex;\n    flex: 0 0 100%;\n    align-items: center;\n\n    & > b {\n      margin-right: 5px;\n    }\n\n    & > span {\n      font-size: 12px;\n    }\n  }\n\n  & a {\n    text-decoration: none;\n    color: deepskyblue;\n  }\n`;\n","import { ChatWrapper } from '@components/Chat/styles';\nimport { IChat, IDM, IUser } from '@typings/db';\nimport dayjs from 'dayjs';\nimport gravatar from 'gravatar';\nimport React, { FC, useMemo, memo } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport regexifyString from 'regexify-string';\n\ninterface Props {\n  data: IDM | IChat;\n}\n\nconst BACK_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:7095' : 'https://sleact.nodebird.com';\nconst Chat: FC<Props> = memo(({ data }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const user: IUser = 'Sender' in data ? data.Sender : data.User;\n\n  const result = useMemo<(string | JSX.Element)[] | JSX.Element>(\n    () =>\n      data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') ? (\n        <img src={`${BACK_URL}/${data.content}`} style={{ maxHeight: 200 }} />\n      ) : (\n        regexifyString({\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (arr) {\n              return (\n                <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\n                  @{arr[1]}\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n          input: data.content,\n        })\n      ),\n    [workspace, data.content],\n  );\n\n  return (\n    <ChatWrapper>\n      <div className=\"chat-img\">\n        <img src={gravatar.url(user.email, { s: '36px', d: 'retro' })} alt={user.nickname} />\n      </div>\n      <div className=\"chat-text\">\n        <div className=\"chat-user\">\n          <b>{user.nickname}</b>\n          <span>{dayjs(data.createdAt).format('h:mm A')}</span>\n        </div>\n        <p>{result}</p>\n      </div>\n    </ChatWrapper>\n  );\n});\n\nexport default Chat;\n","import styled from '@emotion/styled';\n\nexport const ChatZone = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n`;\n\nexport const Section = styled.section`\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: white;\n    border: none;\n    outline: none;\n  }\n`;\n","import Chat from '@components/Chat';\nimport { ChatZone, Section, StickyHeader } from '@components/ChatList/styles';\nimport { IChat, IDM } from '@typings/db';\nimport React, { FC, RefObject, useCallback } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\ninterface Props {\n  scrollbarRef: RefObject<Scrollbars>;\n  isReachingEnd?: boolean;\n  isEmpty: boolean;\n  chatSections: { [key: string]: (IDM | IChat)[] };\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\n}\nconst ChatList: FC<Props> = ({ scrollbarRef, isReachingEnd, isEmpty, chatSections, setSize }) => {\n  const onScroll = useCallback(\n    (values) => {\n      if (values.scrollTop === 0 && !isReachingEnd && !isEmpty) {\n        setSize((size) => size + 1).then(() => {\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - values.scrollHeight);\n        });\n      }\n    },\n    [setSize, scrollbarRef, isReachingEnd, isEmpty],\n  );\n\n  return (\n    <ChatZone>\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\n        {Object.entries(chatSections).map(([date, chats]) => {\n          return (\n            <Section className={`section-${date}`} key={date}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats.map((chat) => (\n                <Chat key={chat.id} data={chat} />\n              ))}\n            </Section>\n          );\n        })}\n      </Scrollbars>\n    </ChatZone>\n  );\n};\n\nexport default ChatList;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMembers } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then(() => {\n          revalidateMembers();\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [channel, newMember, revalidateMembers, setNewMember, setShowInviteChannelModal, workspace],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import { IChat, IDM } from '@typings/db';\nimport dayjs from 'dayjs';\n\nexport default function makeSection<T extends IDM | IChat>(chatList: T[]) {\n  const sections: { [key: string]: T[] } = {};\n  chatList.forEach((chat) => {\n    const monthDate = dayjs(chat.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(chat);\n    } else {\n      sections[monthDate] = [chat];\n    }\n  });\n  return sections;\n}\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { Header, Container, DragOver } from '@pages/Channel/styles';\nimport { IChannel, IChat, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\nconst PAGE_SIZE = 20;\nconst Channel = () => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { data: channelsData } = useSWR<IChannel[]>(`/api/workspaces/${workspace}/channels`, fetcher);\n  const channelData = channelsData?.find((v) => v.name === channel);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IChat[]>(\n    (index) => `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const { data: channelMembersData } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n  const [chat, onChangeChat, setChat] = useInput('');\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\n\n  const onCloseModal = useCallback(() => {\n    setShowInviteChannelModal(false);\n  }, []);\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData && channelData && userData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            UserId: userData.id,\n            User: userData,\n            createdAt: new Date(),\n            ChannelId: channelData.id,\n            Channel: channelData,\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, {\n            content: savedChat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, channel, channelData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback(\n    (data: IChat) => {\n      if (\n        data.Channel.name === channel &&\n        (data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') || data.UserId !== userData?.id)\n      ) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              toast.success('새 메시지가 도착했습니다.', {\n                onClick() {\n                  scrollbarRef.current?.scrollToBottom();\n                },\n                closeOnClick: true,\n              });\n            }\n          }\n        });\n      }\n    },\n    [channel, userData, mutateChat],\n  );\n\n  useEffect(() => {\n    socket?.on('message', onMessage);\n    return () => {\n      socket?.off('message', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n  }, [workspace, channel]);\n\n  const onClickInviteChannel = useCallback(() => {\n    setShowInviteChannelModal(true);\n  }, []);\n\n  const onDrop = useCallback(\n    (e) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          console.log(e.dataTransfer.items[i]);\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            console.log(e, '.... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log(e, '... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/channels/${channel}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${channel}`, new Date().getTime().toString());\n      });\n    },\n    [workspace, channel],\n  );\n\n  const onDragOver = useCallback((e) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (channelsData && !channelData) {\n    return <Redirect to={`/workspace/${workspace}/channel/slack`} />;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IChat[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <span>#{channel}</span>\n        <div style={{ display: 'flex', flex: 1, justifyContent: 'flex-end', alignItems: 'center' }}>\n          <span>{channelMembersData?.length}</span>\n          <button\n            onClick={onClickInviteChannel}\n            className=\"c-button-unstyled p-ia__view_header__button\"\n            aria-label=\"Add people to #react-native\"\n            data-sk=\"tooltip_parent\"\n            type=\"button\"\n          >\n            <i className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\" aria-hidden=\"true\" />\n          </button>\n        </div>\n      </Header>\n      <ChatList\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        chatSections={chatSections}\n        setSize={setSize}\n      />\n      <ChatBox\n        onSubmitForm={onSubmitForm}\n        chat={chat}\n        onChangeChat={onChangeChat}\n        placeholder={`Message #${channel}`}\n        data={channelMembersData}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n      <ToastContainer position=\"bottom-center\" />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default Channel;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n\n  & img {\n    margin-right: 5px;\n  }\n`;\n","import ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport { DragOver } from '@pages/Channel/styles';\nimport { Header, Container } from '@pages/DirectMessage/styles';\nimport { IDM } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport makeSection from '@utils/makeSection';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\nconst PAGE_SIZE = 20;\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: myData } = useSWR('/api/users', fetcher);\n  const { data: userData } = useSWR(`/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const [chat, onChangeChat, setChat] = useInput('');\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            SenderId: myData.id,\n            Sender: myData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n            content: chat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, id, myData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback(\n    (data: IDM) => {\n      if (data.SenderId === Number(id) && myData.id !== Number(id)) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              toast.success('새 메시지가 도착했습니다.', {\n                onClick() {\n                  scrollbarRef.current?.scrollToBottom();\n                },\n                closeOnClick: true,\n              });\n            }\n          }\n        });\n      }\n    },\n    [id, myData, mutateChat],\n  );\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n  }, [workspace, id]);\n\n  const onDrop = useCallback(\n    (e) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`/api/workspaces/${workspace}/dms/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n        mutateChat();\n      });\n    },\n    [workspace, id, mutateChat],\n  );\n\n  const onDragOver = useCallback((e) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n      <Header>\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n        <span>{userData.nickname}</span>\n      </Header>\n      <ChatList\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        chatSections={chatSections}\n        setSize={setSize}\n      />\n      <ChatBox\n        onSubmitForm={onSubmitForm}\n        chat={chat}\n        onChangeChat={onChangeChat}\n        placeholder={`Message ${userData.nickname}`}\n        data={[]}\n      />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n\n  & img {\n    display: flex;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n\n    &.selected {\n      color: white;\n    }\n  }\n\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n\n  & h2 {\n    padding-left: 20px;\n  }\n\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import ChannelList from '@components/ChannelList';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport DMList from '@components/DMList';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport Menu from '@components/Menu';\nimport Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport useSocket from '@hooks/useSocket';\nimport Channel from '@pages/Channel';\nimport DirectMessage from '@pages/DirectMessage';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useSWR from 'swr';\n\nimport {\n  AddButton,\n  Channels,\n  Chats,\n  Header,\n  LogOutButton,\n  MenuScroll,\n  ProfileImg,\n  ProfileModal,\n  RightMenu,\n  WorkspaceButton,\n  WorkspaceModal,\n  WorkspaceName,\n  Workspaces,\n  WorkspaceWrapper,\n} from './styles';\n\nconst Workspace = () => {\n  const params = useParams<{ workspace?: string }>();\n  // console.log('params', params, 'location', location, 'routeMatch', routeMatch, 'history', history);\n  const { workspace } = params;\n  const [socket, disconnectSocket] = useSocket(workspace);\n  const { data: userData, mutate: revalidateUser } = useSWR<IUser | false>('/api/users', fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const onLogOut = useCallback(() => {\n    axios\n      .post('/api/users/logout')\n      .then(() => {\n        revalidateUser();\n      })\n      .catch((error) => {\n        console.dir(error);\n        toast.error(error.response?.data, { position: 'bottom-center' });\n      });\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) {\n        return;\n      }\n      if (!newUrl || !newUrl.trim()) {\n        return;\n      }\n      axios\n        .post('/api/workspaces', {\n          workspace: newWorkspace,\n          url: newUrl,\n        })\n        .then(() => {\n          revalidateUser();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkspace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      console.info('disconnect socket', workspace);\n      disconnectSocket();\n    };\n  }, [disconnectSocket, workspace]);\n  useEffect(() => {\n    if (channelData && userData) {\n      console.info('로그인하자', socket);\n      socket?.emit('login', { id: userData?.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, userData, channelData]);\n\n  if (userData === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header>\n        {userData && (\n          <RightMenu>\n            <span onClick={onClickUserProfile}>\n              <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            </span>\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onClickUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogOut}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </RightMenu>\n        )}\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/slack`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>\n            {userData?.Workspaces.find((v) => v.url === workspace)?.name}\n          </WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>{userData?.Workspaces.find((v) => v.url === workspace)?.name}</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogOut}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace-url\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <ToastContainer position=\"bottom-center\" />\n    </div>\n  );\n};\n\nexport default Workspace;\n"],"names":["CollapseButton","collapse","channel","workspace","useParams","location","useLocation","userData","useSWR","fetcher","dedupingInterval","data","date","localStorage","getItem","name","count","mutate","useEffect","pathname","key","activeClassName","to","className","undefined","useState","channelCollapse","setChannelCollapse","channelData","toggleChannelCollapse","useCallback","prev","onClick","map","id","CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","e","setShowCreateChannelModal","useInput","newChannel","onChangeNewChannel","setNewChannel","revalidateChannel","onCreateChannel","preventDefault","trim","axios","then","catch","error","console","dir","toast","response","position","onSubmit","value","onChange","member","isOnline","nickname","sockets","disconnect","io","transports","info","memberData","socket","useSocket","onlineList","setOnlineList","log","on","hasListeners","off","includes","setShowInviteWorkspaceModal","newMember","onChangeNewMember","setNewMember","revalidateMember","onInviteMember","email","type","CreateMenu","Menu","closeButton","style","defaultProps","ChatArea","Form","MentionsTextarea","MentionsInput","Toolbox","SendButton","EachMention","focus","onSubmitForm","chat","onChangeChat","placeholder","textareaRef","useRef","current","autosize","onKeydownChat","shiftKey","renderUserSuggestion","search","highlightedDisplay","index","src","gravatar","s","d","alt","onKeyPress","inputRef","allowSuggestionsAboveCursor","appendSpaceOnAdd","trigger","v","display","renderSuggestion","disabled","ChatWrapper","memo","user","Sender","User","result","useMemo","content","startsWith","maxHeight","regexifyString","pattern","decorator","match","arr","input","dayjs","createdAt","format","ChatZone","Section","StickyHeader","scrollbarRef","isReachingEnd","isEmpty","chatSections","setSize","onScroll","values","scrollTop","size","getScrollHeight","scrollHeight","autoHide","ref","onScrollFrame","Object","entries","chats","setShowInviteChannelModal","revalidateMembers","Container","Header","DragOver","makeSection","chatList","sections","forEach","monthDate","Array","isArray","push","channelsData","find","useSWRInfinite","onSuccess","length","setTimeout","scrollToBottom","chatData","mutateChat","channelMembersData","setChat","showInviteChannelModal","dragOver","setDragOver","savedChat","prevChatData","unshift","UserId","Date","ChannelId","Channel","setItem","getTime","toString","getValues","onMessage","getClientHeight","getScrollTop","closeOnClick","onClickInviteChannel","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","append","files","onDragOver","concat","reverse","flex","justifyContent","alignItems","myData","SenderId","ReceiverId","Receiver","Number","RightMenu","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","disconnectSocket","revalidateUser","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showCreateChannelModal","showUserMenu","setShowUserMenu","showWorkspaceModal","setShowWorkspaceModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","onLogOut","onCreateWorkspace","url","onClickCreateWorkspace","onClickAddChannel","onClickInviteWorkspace","onClickUserProfile","toggleWorkspaceModal","emit","channels","right","top","ws","slice","toUpperCase","left","path","component","DirectMessage"],"sourceRoot":""}